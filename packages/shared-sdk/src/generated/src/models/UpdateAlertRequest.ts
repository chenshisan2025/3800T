/* tslint:disable */
/* eslint-disable */
/**
 * 古灵通股票投资平台 API
 * 古灵通股票投资平台的 RESTful API 服务  ## 功能特性 - 用户认证与授权 - 股票数据查询 - 自选股管理 - 投资组合管理 - AI 投资报告 - 实时行情数据  ## 认证方式 使用 Bearer Token 进行身份验证，通过 Supabase Auth 获取访问令牌。  ## 响应格式 所有 API 响应都遵循统一的格式： ```json {   \"success\": true,   \"data\": {},   \"message\": \"操作成功\",   \"timestamp\": \"2024-01-01T00:00:00.000Z\" } ``` 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@gulingtong.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateAlertRequest
 */
export interface UpdateAlertRequest {
    /**
     * 提醒规则 ID
     * @type {number}
     * @memberof UpdateAlertRequest
     */
    id: number;
    /**
     * 价格条件
     * @type {string}
     * @memberof UpdateAlertRequest
     */
    condition?: UpdateAlertRequestConditionEnum;
    /**
     * 目标价格
     * @type {number}
     * @memberof UpdateAlertRequest
     */
    targetPrice?: number;
    /**
     * 是否激活
     * @type {boolean}
     * @memberof UpdateAlertRequest
     */
    isActive?: boolean;
}


/**
 * @export
 */
export const UpdateAlertRequestConditionEnum = {
    GreaterThanOrEqualTo: '>=',
    LessThanOrEqualTo: '<='
} as const;
export type UpdateAlertRequestConditionEnum = typeof UpdateAlertRequestConditionEnum[keyof typeof UpdateAlertRequestConditionEnum];


/**
 * Check if a given object implements the UpdateAlertRequest interface.
 */
export function instanceOfUpdateAlertRequest(value: object): value is UpdateAlertRequest {
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function UpdateAlertRequestFromJSON(json: any): UpdateAlertRequest {
    return UpdateAlertRequestFromJSONTyped(json, false);
}

export function UpdateAlertRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateAlertRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'condition': json['condition'] == null ? undefined : json['condition'],
        'targetPrice': json['targetPrice'] == null ? undefined : json['targetPrice'],
        'isActive': json['isActive'] == null ? undefined : json['isActive'],
    };
}

export function UpdateAlertRequestToJSON(json: any): UpdateAlertRequest {
    return UpdateAlertRequestToJSONTyped(json, false);
}

export function UpdateAlertRequestToJSONTyped(value?: UpdateAlertRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'condition': value['condition'],
        'targetPrice': value['targetPrice'],
        'isActive': value['isActive'],
    };
}

