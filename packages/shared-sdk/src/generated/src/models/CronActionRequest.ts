/* tslint:disable */
/* eslint-disable */
/**
 * 古灵通股票投资平台 API
 * 古灵通股票投资平台的 RESTful API 服务  ## 功能特性 - 用户认证与授权 - 股票数据查询 - 自选股管理 - 投资组合管理 - AI 投资报告 - 实时行情数据  ## 认证方式 使用 Bearer Token 进行身份验证，通过 Supabase Auth 获取访问令牌。  ## 响应格式 所有 API 响应都遵循统一的格式： ```json {   \"success\": true,   \"data\": {},   \"message\": \"操作成功\",   \"timestamp\": \"2024-01-01T00:00:00.000Z\" } ``` 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@gulingtong.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CronActionRequest
 */
export interface CronActionRequest {
    /**
     * 任务名称
     * @type {string}
     * @memberof CronActionRequest
     */
    task: CronActionRequestTaskEnum;
    /**
     * 操作类型
     * @type {string}
     * @memberof CronActionRequest
     */
    action: CronActionRequestActionEnum;
}


/**
 * @export
 */
export const CronActionRequestTaskEnum = {
    MarketScan: 'market-scan'
} as const;
export type CronActionRequestTaskEnum = typeof CronActionRequestTaskEnum[keyof typeof CronActionRequestTaskEnum];

/**
 * @export
 */
export const CronActionRequestActionEnum = {
    Start: 'start',
    Stop: 'stop',
    RunOnce: 'run-once'
} as const;
export type CronActionRequestActionEnum = typeof CronActionRequestActionEnum[keyof typeof CronActionRequestActionEnum];


/**
 * Check if a given object implements the CronActionRequest interface.
 */
export function instanceOfCronActionRequest(value: object): value is CronActionRequest {
    if (!('task' in value) || value['task'] === undefined) return false;
    if (!('action' in value) || value['action'] === undefined) return false;
    return true;
}

export function CronActionRequestFromJSON(json: any): CronActionRequest {
    return CronActionRequestFromJSONTyped(json, false);
}

export function CronActionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CronActionRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'task': json['task'],
        'action': json['action'],
    };
}

export function CronActionRequestToJSON(json: any): CronActionRequest {
    return CronActionRequestToJSONTyped(json, false);
}

export function CronActionRequestToJSONTyped(value?: CronActionRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'task': value['task'],
        'action': value['action'],
    };
}

