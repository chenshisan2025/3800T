/* tslint:disable */
/* eslint-disable */
/**
 * 古灵通股票投资平台 API
 * 古灵通股票投资平台的 RESTful API 服务  ## 功能特性 - 用户认证与授权 - 股票数据查询 - 自选股管理 - 投资组合管理 - AI 投资报告 - 实时行情数据  ## 认证方式 使用 Bearer Token 进行身份验证，通过 Supabase Auth 获取访问令牌。  ## 响应格式 所有 API 响应都遵循统一的格式： ```json {   \"success\": true,   \"data\": {},   \"message\": \"操作成功\",   \"timestamp\": \"2024-01-01T00:00:00.000Z\" } ``` 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@gulingtong.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StockData
 */
export interface StockData {
    /**
     * 数据 ID
     * @type {number}
     * @memberof StockData
     */
    id: number;
    /**
     * 股票 ID
     * @type {number}
     * @memberof StockData
     */
    stockId: number;
    /**
     * 交易日期
     * @type {Date}
     * @memberof StockData
     */
    date: Date;
    /**
     * 开盘价
     * @type {number}
     * @memberof StockData
     */
    openPrice: number;
    /**
     * 收盘价
     * @type {number}
     * @memberof StockData
     */
    closePrice: number;
    /**
     * 最高价
     * @type {number}
     * @memberof StockData
     */
    highPrice: number;
    /**
     * 最低价
     * @type {number}
     * @memberof StockData
     */
    lowPrice: number;
    /**
     * 成交量
     * @type {number}
     * @memberof StockData
     */
    volume: number;
    /**
     * 成交额
     * @type {number}
     * @memberof StockData
     */
    turnover: number;
    /**
     * 涨跌幅
     * @type {number}
     * @memberof StockData
     */
    changePercent: number;
    /**
     * 创建时间
     * @type {Date}
     * @memberof StockData
     */
    createdAt: Date;
}

/**
 * Check if a given object implements the StockData interface.
 */
export function instanceOfStockData(value: object): value is StockData {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('stockId' in value) || value['stockId'] === undefined) return false;
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('openPrice' in value) || value['openPrice'] === undefined) return false;
    if (!('closePrice' in value) || value['closePrice'] === undefined) return false;
    if (!('highPrice' in value) || value['highPrice'] === undefined) return false;
    if (!('lowPrice' in value) || value['lowPrice'] === undefined) return false;
    if (!('volume' in value) || value['volume'] === undefined) return false;
    if (!('turnover' in value) || value['turnover'] === undefined) return false;
    if (!('changePercent' in value) || value['changePercent'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    return true;
}

export function StockDataFromJSON(json: any): StockData {
    return StockDataFromJSONTyped(json, false);
}

export function StockDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): StockData {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'stockId': json['stock_id'],
        'date': (new Date(json['date'])),
        'openPrice': json['open_price'],
        'closePrice': json['close_price'],
        'highPrice': json['high_price'],
        'lowPrice': json['low_price'],
        'volume': json['volume'],
        'turnover': json['turnover'],
        'changePercent': json['change_percent'],
        'createdAt': (new Date(json['created_at'])),
    };
}

export function StockDataToJSON(json: any): StockData {
    return StockDataToJSONTyped(json, false);
}

export function StockDataToJSONTyped(value?: StockData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'stock_id': value['stockId'],
        'date': ((value['date']).toISOString().substring(0,10)),
        'open_price': value['openPrice'],
        'close_price': value['closePrice'],
        'high_price': value['highPrice'],
        'low_price': value['lowPrice'],
        'volume': value['volume'],
        'turnover': value['turnover'],
        'change_percent': value['changePercent'],
        'created_at': ((value['createdAt']).toISOString()),
    };
}

