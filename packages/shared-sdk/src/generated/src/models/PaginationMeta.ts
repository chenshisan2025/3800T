/* tslint:disable */
/* eslint-disable */
/**
 * 古灵通股票投资平台 API
 * 古灵通股票投资平台的 RESTful API 服务  ## 功能特性 - 用户认证与授权 - 股票数据查询 - 自选股管理 - 投资组合管理 - AI 投资报告 - 实时行情数据  ## 认证方式 使用 Bearer Token 进行身份验证，通过 Supabase Auth 获取访问令牌。  ## 响应格式 所有 API 响应都遵循统一的格式： ```json {   \"success\": true,   \"data\": {},   \"message\": \"操作成功\",   \"timestamp\": \"2024-01-01T00:00:00.000Z\" } ``` 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@gulingtong.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PaginationMeta
 */
export interface PaginationMeta {
    /**
     * 当前页码
     * @type {number}
     * @memberof PaginationMeta
     */
    page: number;
    /**
     * 每页数量
     * @type {number}
     * @memberof PaginationMeta
     */
    limit: number;
    /**
     * 总记录数
     * @type {number}
     * @memberof PaginationMeta
     */
    total: number;
    /**
     * 总页数
     * @type {number}
     * @memberof PaginationMeta
     */
    totalPages: number;
    /**
     * 是否有下一页
     * @type {boolean}
     * @memberof PaginationMeta
     */
    hasNext: boolean;
    /**
     * 是否有上一页
     * @type {boolean}
     * @memberof PaginationMeta
     */
    hasPrev: boolean;
}

/**
 * Check if a given object implements the PaginationMeta interface.
 */
export function instanceOfPaginationMeta(value: object): value is PaginationMeta {
    if (!('page' in value) || value['page'] === undefined) return false;
    if (!('limit' in value) || value['limit'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    if (!('totalPages' in value) || value['totalPages'] === undefined) return false;
    if (!('hasNext' in value) || value['hasNext'] === undefined) return false;
    if (!('hasPrev' in value) || value['hasPrev'] === undefined) return false;
    return true;
}

export function PaginationMetaFromJSON(json: any): PaginationMeta {
    return PaginationMetaFromJSONTyped(json, false);
}

export function PaginationMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginationMeta {
    if (json == null) {
        return json;
    }
    return {
        
        'page': json['page'],
        'limit': json['limit'],
        'total': json['total'],
        'totalPages': json['total_pages'],
        'hasNext': json['has_next'],
        'hasPrev': json['has_prev'],
    };
}

export function PaginationMetaToJSON(json: any): PaginationMeta {
    return PaginationMetaToJSONTyped(json, false);
}

export function PaginationMetaToJSONTyped(value?: PaginationMeta | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'page': value['page'],
        'limit': value['limit'],
        'total': value['total'],
        'total_pages': value['totalPages'],
        'has_next': value['hasNext'],
        'has_prev': value['hasPrev'],
    };
}

