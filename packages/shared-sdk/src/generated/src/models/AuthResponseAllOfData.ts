/* tslint:disable */
/* eslint-disable */
/**
 * 古灵通股票投资平台 API
 * 古灵通股票投资平台的 RESTful API 服务  ## 功能特性 - 用户认证与授权 - 股票数据查询 - 自选股管理 - 投资组合管理 - AI 投资报告 - 实时行情数据  ## 认证方式 使用 Bearer Token 进行身份验证，通过 Supabase Auth 获取访问令牌。  ## 响应格式 所有 API 响应都遵循统一的格式： ```json {   \"success\": true,   \"data\": {},   \"message\": \"操作成功\",   \"timestamp\": \"2024-01-01T00:00:00.000Z\" } ``` 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@gulingtong.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
    UserToJSONTyped,
} from './User';
import type { AuthResponseAllOfDataSession } from './AuthResponseAllOfDataSession';
import {
    AuthResponseAllOfDataSessionFromJSON,
    AuthResponseAllOfDataSessionFromJSONTyped,
    AuthResponseAllOfDataSessionToJSON,
    AuthResponseAllOfDataSessionToJSONTyped,
} from './AuthResponseAllOfDataSession';

/**
 * 
 * @export
 * @interface AuthResponseAllOfData
 */
export interface AuthResponseAllOfData {
    /**
     * 
     * @type {User}
     * @memberof AuthResponseAllOfData
     */
    user?: User;
    /**
     * 
     * @type {AuthResponseAllOfDataSession}
     * @memberof AuthResponseAllOfData
     */
    session?: AuthResponseAllOfDataSession;
}

/**
 * Check if a given object implements the AuthResponseAllOfData interface.
 */
export function instanceOfAuthResponseAllOfData(value: object): value is AuthResponseAllOfData {
    return true;
}

export function AuthResponseAllOfDataFromJSON(json: any): AuthResponseAllOfData {
    return AuthResponseAllOfDataFromJSONTyped(json, false);
}

export function AuthResponseAllOfDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthResponseAllOfData {
    if (json == null) {
        return json;
    }
    return {
        
        'user': json['user'] == null ? undefined : UserFromJSON(json['user']),
        'session': json['session'] == null ? undefined : AuthResponseAllOfDataSessionFromJSON(json['session']),
    };
}

export function AuthResponseAllOfDataToJSON(json: any): AuthResponseAllOfData {
    return AuthResponseAllOfDataToJSONTyped(json, false);
}

export function AuthResponseAllOfDataToJSONTyped(value?: AuthResponseAllOfData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'user': UserToJSON(value['user']),
        'session': AuthResponseAllOfDataSessionToJSON(value['session']),
    };
}

