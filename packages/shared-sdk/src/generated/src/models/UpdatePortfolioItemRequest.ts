/* tslint:disable */
/* eslint-disable */
/**
 * 古灵通股票投资平台 API
 * 古灵通股票投资平台的 RESTful API 服务  ## 功能特性 - 用户认证与授权 - 股票数据查询 - 自选股管理 - 投资组合管理 - AI 投资报告 - 实时行情数据  ## 认证方式 使用 Bearer Token 进行身份验证，通过 Supabase Auth 获取访问令牌。  ## 响应格式 所有 API 响应都遵循统一的格式： ```json {   \"success\": true,   \"data\": {},   \"message\": \"操作成功\",   \"timestamp\": \"2024-01-01T00:00:00.000Z\" } ``` 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@gulingtong.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdatePortfolioItemRequest
 */
export interface UpdatePortfolioItemRequest {
    /**
     * 持仓数量
     * @type {number}
     * @memberof UpdatePortfolioItemRequest
     */
    quantity?: number;
    /**
     * 平均成本
     * @type {number}
     * @memberof UpdatePortfolioItemRequest
     */
    averageCost?: number;
}

/**
 * Check if a given object implements the UpdatePortfolioItemRequest interface.
 */
export function instanceOfUpdatePortfolioItemRequest(value: object): value is UpdatePortfolioItemRequest {
    return true;
}

export function UpdatePortfolioItemRequestFromJSON(json: any): UpdatePortfolioItemRequest {
    return UpdatePortfolioItemRequestFromJSONTyped(json, false);
}

export function UpdatePortfolioItemRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdatePortfolioItemRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'quantity': json['quantity'] == null ? undefined : json['quantity'],
        'averageCost': json['average_cost'] == null ? undefined : json['average_cost'],
    };
}

export function UpdatePortfolioItemRequestToJSON(json: any): UpdatePortfolioItemRequest {
    return UpdatePortfolioItemRequestToJSONTyped(json, false);
}

export function UpdatePortfolioItemRequestToJSONTyped(value?: UpdatePortfolioItemRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'quantity': value['quantity'],
        'average_cost': value['averageCost'],
    };
}

