/* tslint:disable */
/* eslint-disable */
/**
 * 古灵通股票投资平台 API
 * 古灵通股票投资平台的 RESTful API 服务  ## 功能特性 - 用户认证与授权 - 股票数据查询 - 自选股管理 - 投资组合管理 - AI 投资报告 - 实时行情数据  ## 认证方式 使用 Bearer Token 进行身份验证，通过 Supabase Auth 获取访问令牌。  ## 响应格式 所有 API 响应都遵循统一的格式： ```json {   \"success\": true,   \"data\": {},   \"message\": \"操作成功\",   \"timestamp\": \"2024-01-01T00:00:00.000Z\" } ``` 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@gulingtong.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CronStatusResponseDataMarketScanStatus
 */
export interface CronStatusResponseDataMarketScanStatus {
    /**
     * 市场扫描任务是否运行中
     * @type {boolean}
     * @memberof CronStatusResponseDataMarketScanStatus
     */
    isRunning: boolean;
    /**
     * 上次运行时间
     * @type {Date}
     * @memberof CronStatusResponseDataMarketScanStatus
     */
    lastRun?: Date;
    /**
     * 下次运行时间
     * @type {Date}
     * @memberof CronStatusResponseDataMarketScanStatus
     */
    nextRun?: Date;
}

/**
 * Check if a given object implements the CronStatusResponseDataMarketScanStatus interface.
 */
export function instanceOfCronStatusResponseDataMarketScanStatus(value: object): value is CronStatusResponseDataMarketScanStatus {
    if (!('isRunning' in value) || value['isRunning'] === undefined) return false;
    return true;
}

export function CronStatusResponseDataMarketScanStatusFromJSON(json: any): CronStatusResponseDataMarketScanStatus {
    return CronStatusResponseDataMarketScanStatusFromJSONTyped(json, false);
}

export function CronStatusResponseDataMarketScanStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): CronStatusResponseDataMarketScanStatus {
    if (json == null) {
        return json;
    }
    return {
        
        'isRunning': json['isRunning'],
        'lastRun': json['lastRun'] == null ? undefined : (new Date(json['lastRun'])),
        'nextRun': json['nextRun'] == null ? undefined : (new Date(json['nextRun'])),
    };
}

export function CronStatusResponseDataMarketScanStatusToJSON(json: any): CronStatusResponseDataMarketScanStatus {
    return CronStatusResponseDataMarketScanStatusToJSONTyped(json, false);
}

export function CronStatusResponseDataMarketScanStatusToJSONTyped(value?: CronStatusResponseDataMarketScanStatus | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'isRunning': value['isRunning'],
        'lastRun': value['lastRun'] == null ? undefined : ((value['lastRun']).toISOString()),
        'nextRun': value['nextRun'] == null ? undefined : ((value['nextRun']).toISOString()),
    };
}

