/* tslint:disable */
/* eslint-disable */
/**
 * 古灵通股票投资平台 API
 * 古灵通股票投资平台的 RESTful API 服务  ## 功能特性 - 用户认证与授权 - 股票数据查询 - 自选股管理 - 投资组合管理 - AI 投资报告 - 实时行情数据  ## 认证方式 使用 Bearer Token 进行身份验证，通过 Supabase Auth 获取访问令牌。  ## 响应格式 所有 API 响应都遵循统一的格式： ```json {   \"success\": true,   \"data\": {},   \"message\": \"操作成功\",   \"timestamp\": \"2024-01-01T00:00:00.000Z\" } ``` 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@gulingtong.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Portfolio
 */
export interface Portfolio {
    /**
     * 投资组合 ID
     * @type {number}
     * @memberof Portfolio
     */
    id: number;
    /**
     * 用户 ID
     * @type {number}
     * @memberof Portfolio
     */
    userId: number;
    /**
     * 投资组合名称
     * @type {string}
     * @memberof Portfolio
     */
    name: string;
    /**
     * 描述
     * @type {string}
     * @memberof Portfolio
     */
    description?: string | null;
    /**
     * 创建时间
     * @type {Date}
     * @memberof Portfolio
     */
    createdAt: Date;
    /**
     * 更新时间
     * @type {Date}
     * @memberof Portfolio
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the Portfolio interface.
 */
export function instanceOfPortfolio(value: object): value is Portfolio {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function PortfolioFromJSON(json: any): Portfolio {
    return PortfolioFromJSONTyped(json, false);
}

export function PortfolioFromJSONTyped(json: any, ignoreDiscriminator: boolean): Portfolio {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'userId': json['user_id'],
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function PortfolioToJSON(json: any): Portfolio {
    return PortfolioToJSONTyped(json, false);
}

export function PortfolioToJSONTyped(value?: Portfolio | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'user_id': value['userId'],
        'name': value['name'],
        'description': value['description'],
        'created_at': ((value['createdAt']).toISOString()),
        'updated_at': ((value['updatedAt']).toISOString()),
    };
}

