/* tslint:disable */
/* eslint-disable */
/**
 * 古灵通股票投资平台 API
 * 古灵通股票投资平台的 RESTful API 服务  ## 功能特性 - 用户认证与授权 - 股票数据查询 - 自选股管理 - 投资组合管理 - AI 投资报告 - 实时行情数据  ## 认证方式 使用 Bearer Token 进行身份验证，通过 Supabase Auth 获取访问令牌。  ## 响应格式 所有 API 响应都遵循统一的格式： ```json {   \"success\": true,   \"data\": {},   \"message\": \"操作成功\",   \"timestamp\": \"2024-01-01T00:00:00.000Z\" } ``` 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@gulingtong.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PortfolioStats
 */
export interface PortfolioStats {
    /**
     * 总市值
     * @type {number}
     * @memberof PortfolioStats
     */
    totalValue: number;
    /**
     * 总成本
     * @type {number}
     * @memberof PortfolioStats
     */
    totalCost: number;
    /**
     * 总盈亏
     * @type {number}
     * @memberof PortfolioStats
     */
    totalGainLoss: number;
    /**
     * 总盈亏百分比
     * @type {number}
     * @memberof PortfolioStats
     */
    totalGainLossPercent: number;
    /**
     * 持仓数量
     * @type {number}
     * @memberof PortfolioStats
     */
    itemCount: number;
}

/**
 * Check if a given object implements the PortfolioStats interface.
 */
export function instanceOfPortfolioStats(value: object): value is PortfolioStats {
    if (!('totalValue' in value) || value['totalValue'] === undefined) return false;
    if (!('totalCost' in value) || value['totalCost'] === undefined) return false;
    if (!('totalGainLoss' in value) || value['totalGainLoss'] === undefined) return false;
    if (!('totalGainLossPercent' in value) || value['totalGainLossPercent'] === undefined) return false;
    if (!('itemCount' in value) || value['itemCount'] === undefined) return false;
    return true;
}

export function PortfolioStatsFromJSON(json: any): PortfolioStats {
    return PortfolioStatsFromJSONTyped(json, false);
}

export function PortfolioStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PortfolioStats {
    if (json == null) {
        return json;
    }
    return {
        
        'totalValue': json['total_value'],
        'totalCost': json['total_cost'],
        'totalGainLoss': json['total_gain_loss'],
        'totalGainLossPercent': json['total_gain_loss_percent'],
        'itemCount': json['item_count'],
    };
}

export function PortfolioStatsToJSON(json: any): PortfolioStats {
    return PortfolioStatsToJSONTyped(json, false);
}

export function PortfolioStatsToJSONTyped(value?: PortfolioStats | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'total_value': value['totalValue'],
        'total_cost': value['totalCost'],
        'total_gain_loss': value['totalGainLoss'],
        'total_gain_loss_percent': value['totalGainLossPercent'],
        'item_count': value['itemCount'],
    };
}

