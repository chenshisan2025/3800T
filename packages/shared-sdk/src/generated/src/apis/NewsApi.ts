/* tslint:disable */
/* eslint-disable */
/**
 * 古灵通股票投资平台 API
 * 古灵通股票投资平台的 RESTful API 服务      ## 功能特性 - 用户认证与授权 - 股票数据查询 - 自选股管理 - 投资组合管理 - AI 投资报告 - 实时行情数据  ## 认证方式 使用 Bearer Token 进行身份验证，通过 Supabase Auth 获取访问令牌。  ## 响应格式 所有 API 响应都遵循统一的格式： ```json {   \"success\": true,   \"data\": {},   \"message\": \"操作成功\",   \"timestamp\": \"2024-01-01T00:00:00.000Z\" } ```
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@gulingtong.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';
import type { ErrorResponse, SuccessResponse } from '../models/index';
import {
  ErrorResponseFromJSON,
  ErrorResponseToJSON,
  SuccessResponseFromJSON,
  SuccessResponseToJSON,
} from '../models/index';

/**
 *
 */
export class NewsApi extends runtime.BaseAPI {
  /**
   * 获取资源的详细操作
   * 获取资源
   */
  async apiDataNewsGetRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<SuccessResponse>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    if (this.configuration && this.configuration.accessToken) {
      const token = this.configuration.accessToken;
      const tokenString = await token('BearerAuth', []);

      if (tokenString) {
        headerParameters['Authorization'] = `Bearer ${tokenString}`;
      }
    }

    let urlPath = `/api/data/news`;

    const response = await this.request(
      {
        path: urlPath,
        method: 'GET',
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides
    );

    return new runtime.JSONApiResponse(response, jsonValue =>
      SuccessResponseFromJSON(jsonValue)
    );
  }

  /**
   * 获取资源的详细操作
   * 获取资源
   */
  async apiDataNewsGet(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<SuccessResponse> {
    const response = await this.apiDataNewsGetRaw(initOverrides);
    return await response.value();
  }
}
